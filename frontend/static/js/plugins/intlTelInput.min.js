// intlTelInput.js - Simplified version for phone input with country flags
const intlTelInput = {
    init: function(input, options = {}) {
        const defaultCountries = [
            ['US', 'United States', '+1'],
            ['GB', 'United Kingdom', '+44'],
            ['IN', 'India', '+91'],
            ['CA', 'Canada', '+1'],
            ['AU', 'Australia', '+61'],
            ['DE', 'Germany', '+49'],
            ['FR', 'France', '+33'],
            ['IT', 'Italy', '+39'],
            ['JP', 'Japan', '+81'],
            ['BR', 'Brazil', '+55'],
            ['RU', 'Russia', '+7'],
            ['CN', 'China', '+86'],
            ['ES', 'Spain', '+34'],
            ['MX', 'Mexico', '+52'],
            ['KR', 'South Korea', '+82'],
            ['ID', 'Indonesia', '+62']
        ];

        // Create container
        const container = document.createElement('div');
        container.className = 'iti';
        input.parentNode.insertBefore(container, input);
        container.appendChild(input);

        // Create flag container
        const flagContainer = document.createElement('div');
        flagContainer.className = 'iti__flag-container';
        container.insertBefore(flagContainer, input);

        // Create selected flag
        const selectedFlag = document.createElement('div');
        selectedFlag.className = 'iti__selected-flag';
        flagContainer.appendChild(selectedFlag);

        // Create flag element
        const flag = document.createElement('div');
        flag.className = 'iti__flag';
        selectedFlag.appendChild(flag);

        // Create dial code element
        const dialCode = document.createElement('div');
        dialCode.className = 'iti__selected-dial-code';
        selectedFlag.appendChild(dialCode);

        // Create arrow
        const arrow = document.createElement('div');
        arrow.className = 'iti__arrow';
        selectedFlag.appendChild(arrow);

        // Create country list
        const countryList = document.createElement('ul');
        countryList.className = 'iti__country-list iti__hide';
        flagContainer.appendChild(countryList);

        // Add countries to list
        defaultCountries.forEach(([code, name, dialcode]) => {
            const li = document.createElement('li');
            li.className = 'iti__country';
            li.innerHTML = `
                <div class="iti__flag iti__${code.toLowerCase()}"></div>
                <span class="iti__country-name">${name}</span>
                <span class="iti__dial-code">${dialcode}</span>
            `;
            li.dataset.code = code;
            li.dataset.dialcode = dialcode;
            countryList.appendChild(li);
        });

        // Set initial country
        const setCountry = (code) => {
            const country = defaultCountries.find(c => c[0] === code);
            if (country) {
                flag.className = `iti__flag iti__${code.toLowerCase()}`;
                dialCode.textContent = country[2];
                input.dataset.dialcode = country[2];
            }
        };

        // Set default country
        setCountry(options.initialCountry || 'US');

        // Toggle country list
        selectedFlag.addEventListener('click', () => {
            countryList.classList.toggle('iti__hide');
        });

        // Country selection
        countryList.addEventListener('click', (e) => {
            const li = e.target.closest('li');
            if (li) {
                const code = li.dataset.code;
                setCountry(code);
                countryList.classList.add('iti__hide');
            }
        });

        // Close country list when clicking outside
        document.addEventListener('click', (e) => {
            if (!container.contains(e.target)) {
                countryList.classList.add('iti__hide');
            }
        });

        // Get full number method
        input.getFullNumber = () => {
            return (input.dataset.dialcode || '') + input.value.replace(/[^0-9]/g, '');
        };

        return {
            getNumber: () => input.getFullNumber(),
            setCountry: setCountry,
            getSelectedCountryData: () => {
                const code = flag.className.split('iti__')[2].toUpperCase();
                return defaultCountries.find(c => c[0] === code);
            }
        };
    }
};